# vim: syntax=sh
dncfg_node dncfg_node_data_t;

START  default       ERROR        on_invalid_token;
START  is_newline    START        inc_line_count;
START  is_linecount  START        inc_line_count;
START  is_space      START_SPACE  setup_lvl;
START  is_name       NODE         reset_lvl          add_subnode;

START_SPACE  default     ERROR  on_invalid_token;
START_SPACE  is_newline  START  inc_line_count;
START_SPACE  is_name     NODE   add_subnode;

NODE  default       ERROR     on_invalid_token;
NODE  is_linecount  NODE      inc_line_count;
NODE  is_newline    START     inc_line_count;
NODE  is_name       PROP      add_prop_name;
NODE  is_ref        REF       add_ref;
NODE  is_eq         NODE_EQ;

NODE_EQ  default            ERROR        on_invalid_token;
NODE_EQ  is_linecount       NODE_EQ      inc_line_count;
NODE_EQ  is_number          NODE_NUMBER  add_value_number;
NODE_EQ  is_string          NODE_EQ_STR  add_value_str;
NODE_EQ  is_name            NODE_NUMBER  add_value_number;
NODE_EQ  is_open_square_br  VALUE        set_value_dst_node  node_putback;
NODE_EQ  is_open_curly_br   VALUE        set_value_dst_node  node_putback;
NODE_EQ  is_ref             REF          add_ref;

# VALUE PARSER PART
VALUE  default            ERROR  on_invalid_token;
VALUE  is_open_square_br  LIST   start_list;
VALUE  is_open_curly_br   DICT   start_dict;

DICT  default                           ERROR      on_invalid_token;
DICT  is_linecount                      DICT       inc_line_count;
DICT  is_newline                        DICT       inc_line_count;
DICT  is_space                          DICT;
DICT  is_string                         DICT_KEY   dict_set_key;
DICT  is_name                           DICT_KEY   dict_set_key;
DICT  is_number                         DICT_KEY   dict_set_key;
DICT  is_close_curly_br_prev_lvl_dict   DICT_NEXT  pop_value_stack;
DICT  is_close_curly_br_prev_lvl_list   LIST_NEXT  pop_value_stack;
DICT  is_close_curly_br_lvl_0_dst_node  NODE       commit_value;
DICT  is_close_curly_br_lvl_0_dst_prop  PROP       commit_value;

DICT_NEXT  default                           ERROR       on_invalid_token;
DICT_NEXT  is_linecount                      DICT_NEXT   inc_line_count;
DICT_NEXT  is_newline                        DICT_NEXT   inc_line_count;
DICT_NEXT  is_space                          DICT_NEXT;
DICT_NEXT  is_comma                          DICT;
DICT_NEXT  is_close_curly_br_prev_lvl_dict   DICT_NEXT   pop_value_stack;
DICT_NEXT  is_close_curly_br_prev_lvl_list   LIST_NEXT   pop_value_stack;
DICT_NEXT  is_close_curly_br_lvl_0_dst_node  NODE        commit_value;
DICT_NEXT  is_close_curly_br_lvl_0_dst_prop  PROP        commit_value;

DICT_KEY  default   ERROR        on_invalid_token;
DICT_KEY  is_colon  DICT_COLON;

DICT_COLON  default            ERROR            on_invalid_token;
DICT_COLON  is_string          DICT_KEY_STRING  dict_set_string_value;
DICT_COLON  is_name            DICT_KEY_NUMBER  dict_set_string_value;
DICT_COLON  is_number          DICT_KEY_NUMBER  dict_set_string_value;
DICT_COLON  is_open_curly_br   DICT             dict_set_dict_value;
DICT_COLON  is_open_square_br  LIST             dict_set_list_value;

DICT_KEY_STRING  default                           ERROR            on_invalid_token;
DICT_KEY_STRING  is_string                         DICT_KEY_STRING  append_string_to_dict_value;
DICT_KEY_STRING  is_comma                          DICT             pop_value_stack;
DICT_KEY_STRING  is_close_curly_br_prev_lvl_dict   DICT_NEXT        pop_value_stack  node_putback;
DICT_KEY_STRING  is_close_curly_br_prev_lvl_list   LIST_NEXT        pop_value_stack  node_putback;
DICT_KEY_STRING  is_close_curly_br_lvl_0_dst_node  NODE             commit_value;
DICT_KEY_STRING  is_close_curly_br_lvl_0_dst_prop  PROP             commit_value;

DICT_KEY_NUMBER  default                           ERROR            on_invalid_token;
DICT_KEY_NUMBER  is_comma                          DICT             pop_value_stack;
DICT_KEY_NUMBER  is_close_curly_br_prev_lvl_dict   DICT_NEXT        pop_value_stack  node_putback;
DICT_KEY_NUMBER  is_close_curly_br_prev_lvl_list   LIST_NEXT        pop_value_stack  node_putback;
DICT_KEY_NUMBER  is_close_curly_br_lvl_0_dst_node  NODE             commit_value;
DICT_KEY_NUMBER  is_close_curly_br_lvl_0_dst_prop  PROP             commit_value;

LIST  default                            ERROR      on_invalid_token;
LIST  is_linecount                       LIST       inc_line_count;
LIST  is_newline                         LIST       inc_line_count;
LIST  is_space                           LIST;
LIST  is_string                          LIST_STR   append_to_list;
LIST  is_name                            LIST_FULL  append_to_list;
LIST  is_number                          LIST_FULL  append_to_list;
LIST  is_ref                             LIST_FULL  append_ref_to_list;
LIST  is_open_square_br                  LIST       push_list_to_value_stack;
LIST  is_open_curly_br                   DICT       push_dict_to_value_stack;
LIST  is_close_square_br_prev_lvl_list   LIST_NEXT  pop_value_stack;
LIST  is_close_square_br_prev_lvl_dict   DICT_NEXT  pop_value_stack;
LIST  is_close_square_br_lvl_0_dst_node  NODE       commit_value;
LIST  is_close_square_br_lvl_0_dst_prop  PROP       commit_value;

LIST_NEXT  default                            ERROR       on_invalid_token;
LIST_NEXT  is_linecount                       LIST_NEXT   inc_line_count;
LIST_NEXT  is_newline                         LIST_NEXT   inc_line_count;
LIST_NEXT  is_space                           LIST_NEXT;
LIST_NEXT  is_comma                           LIST;
LIST_NEXT  is_close_square_br_prev_lvl_list   LIST_NEXT  pop_value_stack;
LIST_NEXT  is_close_square_br_prev_lvl_dict   DICT_NEXT  pop_value_stack;
LIST_NEXT  is_close_square_br_lvl_0_dst_node  NODE        commit_value;
LIST_NEXT  is_close_square_br_lvl_0_dst_prop  PROP        commit_value;

LIST_STR  default                            ERROR      on_invalid_token;
LIST_STR  is_linecount                       LIST_STR   inc_line_count;
LIST_STR  is_newline                         LIST_STR   inc_line_count;
LIST_STR  is_space                           LIST_STR;
LIST_STR  is_comma                           LIST;
LIST_STR  is_string                          LIST_STR   append_to_last_in_list;
LIST_STR  is_close_square_br_prev_lvl_list   LIST_NEXT  pop_value_stack;
LIST_STR  is_close_square_br_prev_lvl_dict   DICT_NEXT  pop_value_stack;
LIST_STR  is_close_square_br_lvl_0_dst_node  NODE       commit_value;
LIST_STR  is_close_square_br_lvl_0_dst_prop  PROP       commit_value;

# Represent full token (not apendable as string)
LIST_FULL  default                            ERROR       on_invalid_token;
LIST_FULL  is_linecount                       LIST_FULL   inc_line_count;
LIST_FULL  is_newline                         LIST_FULL   inc_line_count;
LIST_FULL  is_space                           LIST_FULL;
LIST_FULL  is_comma                           LIST;
LIST_FULL  is_close_square_br_prev_lvl_list   LIST_NEXT  pop_value_stack;
LIST_FULL  is_close_square_br_prev_lvl_dict   DICT_NEXT  pop_value_stack;
LIST_FULL  is_close_square_br_lvl_0_dst_node  NODE        commit_value;
LIST_FULL  is_close_square_br_lvl_0_dst_prop  PROP        commit_value;



NODE_EQ_STR  default       ERROR        on_invalid_token;
NODE_EQ_STR  is_linecount  NODE_EQ_STR  inc_line_count;
NODE_EQ_STR  is_string     NODE_EQ_STR  add_value_str;
NODE_EQ_STR  is_newline    START        inc_line_count;
NODE_EQ_STR  is_name       PROP         add_prop_name;
NODE_EQ_STR  is_ref        REF          add_ref;
NODE_EQ_STR  is_eq         NODE_EQ;

NODE_NUMBER  default     ERROR     on_invalid_token;
NODE_NUMBER  is_newline  START     inc_line_count;
NODE_NUMBER  is_name     PROP      add_prop_name;
NODE_NUMBER  is_ref      REF       add_ref;
NODE_NUMBER  is_eq       NODE_EQ;

PROP  default       ERROR        on_invalid_token;
PROP  is_newline    START        inc_line_count;
PROP  is_linecount  PROP         inc_line_count;
PROP  is_eq         PROP_EQ;
PROP  is_comma      PROP_COMMA;
PROP  is_name       PROP         add_prop_name;

PROP_COMMA  default       ERROR         on_invalid_token;
PROP_COMMA  is_newline    PROP_COMMA    inc_line_count;
PROP_COMMA  is_linecount  PROP_COMMA    inc_line_count;
PROP_COMMA  is_name       PROP          add_prop_name;
PROP_COMMA  is_ref        REF           add_ref;
PROP_COMMA  is_space      NODE_NUMBER;

PROP_EQ  default            ERROR        on_invalid_token;
PROP_EQ  is_linecount       PROP_EQ      inc_line_count;
PROP_EQ  is_string          PROP_EQ_STR  add_prop_value_str;
PROP_EQ  is_number          PROP_EQ_NUM  add_prop_value_number;
PROP_EQ  is_name            PROP_EQ_NUM  add_prop_value_number;
PROP_EQ  is_ref             PROP_EQ_REF  add_prop_value_ref;
PROP_EQ  is_open_square_br  VALUE        set_value_dst_prop      node_putback;

PROP_EQ_STR  default       ERROR        on_invalid_token;
PROP_EQ_STR  is_newline    START        inc_line_count;
PROP_EQ_STR  is_linecount  PROP_EQ_STR  inc_line_count;
PROP_EQ_STR  is_string     PROP_EQ_STR  add_prop_value_str;
PROP_EQ_STR  is_comma      PROP_COMMA;
PROP_EQ_STR  is_name       PROP         add_prop_name;

PROP_EQ_NUM  default       ERROR         on_invalid_token;
PROP_EQ_NUM  is_newline    START         inc_line_count;
PROP_EQ_NUM  is_comma      PROP_COMMA;
PROP_EQ_NUM  is_linecount  PROP_EQ_NUM;
PROP_EQ_NUM  is_name       PROP          add_prop_name;

PROP_EQ_REF  default       ERROR         on_invalid_token;
PROP_EQ_REF  is_newline    START         inc_line_count;
PROP_EQ_REF  is_comma      PROP_COMMA;
PROP_EQ_REF  is_linecount  PROP_EQ_REF;
PROP_EQ_REF  is_name       PROP          add_prop_name;

REF  default       ERROR        on_invalid_token;
REF  is_newline    START        inc_line_count;
REF  is_comma      PROP_COMMA;
REF  is_linecount  REF          inc_line_count;
REF  is_name       PROP         add_prop_name;

