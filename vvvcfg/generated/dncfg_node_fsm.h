/*
 *  This file was generated by cfsmgen script.
 *  See www.github.com/VyacheslavVanin/cfmgen.git 
 */

#ifndef DNCFG_NODE_FSM_H
#define DNCFG_NODE_FSM_H

#ifdef __cplusplus
extern "C" {
#endif

typedef enum DNCFG_NODE_STATE {
    DNCFG_NODE_START,
    DNCFG_NODE_ERROR,
    DNCFG_NODE_START_SPACE,
    DNCFG_NODE_NODE,
    DNCFG_NODE_PROP,
    DNCFG_NODE_REF,
    DNCFG_NODE_NODE_EQ,
    DNCFG_NODE_NODE_NUMBER,
    DNCFG_NODE_NODE_EQ_STR,
    DNCFG_NODE_VALUE,
    DNCFG_NODE_LIST,
    DNCFG_NODE_DICT,
    DNCFG_NODE_DICT_KEY,
    DNCFG_NODE_DICT_NEXT,
    DNCFG_NODE_LIST_NEXT,
    DNCFG_NODE_DICT_COLON,
    DNCFG_NODE_DICT_KEY_STRING,
    DNCFG_NODE_DICT_KEY_NUMBER,
    DNCFG_NODE_LIST_STR,
    DNCFG_NODE_LIST_FULL,
    DNCFG_NODE_PROP_EQ,
    DNCFG_NODE_PROP_COMMA,
    DNCFG_NODE_PROP_EQ_STR,
    DNCFG_NODE_PROP_EQ_NUM,
    DNCFG_NODE_PROP_EQ_REF
} DNCFG_NODE_STATE;
#define DNCFG_NODE_STATE_count 25

extern const char* dncfg_node_state_names[25];


typedef struct dncfg_node_data_t dncfg_node_data_t;

typedef struct dncfg_node_ctx_t dncfg_node_ctx_t;

struct dncfg_node_ctx_t {
    DNCFG_NODE_STATE state;
    dncfg_node_data_t* data;
};

void on_invalid_token(dncfg_node_data_t* data);
void inc_line_count(dncfg_node_data_t* data);
void setup_lvl(dncfg_node_data_t* data);
void reset_lvl(dncfg_node_data_t* data);
void add_subnode(dncfg_node_data_t* data);
void add_prop_name(dncfg_node_data_t* data);
void add_ref(dncfg_node_data_t* data);
void add_value_number(dncfg_node_data_t* data);
void add_value_str(dncfg_node_data_t* data);
void set_value_dst_node(dncfg_node_data_t* data);
void node_putback(dncfg_node_data_t* data);
void start_list(dncfg_node_data_t* data);
void start_dict(dncfg_node_data_t* data);
void dict_set_key(dncfg_node_data_t* data);
void pop_value_stack(dncfg_node_data_t* data);
void commit_value(dncfg_node_data_t* data);
void dict_set_string_value(dncfg_node_data_t* data);
void dict_set_dict_value(dncfg_node_data_t* data);
void dict_set_list_value(dncfg_node_data_t* data);
void append_string_to_dict_value(dncfg_node_data_t* data);
void append_to_list(dncfg_node_data_t* data);
void append_ref_to_list(dncfg_node_data_t* data);
void push_list_to_value_stack(dncfg_node_data_t* data);
void push_dict_to_value_stack(dncfg_node_data_t* data);
void append_to_last_in_list(dncfg_node_data_t* data);
void add_prop_value_str(dncfg_node_data_t* data);
void add_prop_value_number(dncfg_node_data_t* data);
void add_prop_value_ref(dncfg_node_data_t* data);
void set_value_dst_prop(dncfg_node_data_t* data);
int dncfg_node_is_newline(const dncfg_node_data_t* data);
int dncfg_node_is_linecount(const dncfg_node_data_t* data);
int dncfg_node_is_space(const dncfg_node_data_t* data);
int dncfg_node_is_name(const dncfg_node_data_t* data);
int dncfg_node_is_ref(const dncfg_node_data_t* data);
int dncfg_node_is_eq(const dncfg_node_data_t* data);
int dncfg_node_is_number(const dncfg_node_data_t* data);
int dncfg_node_is_string(const dncfg_node_data_t* data);
int dncfg_node_is_open_square_br(const dncfg_node_data_t* data);
int dncfg_node_is_open_curly_br(const dncfg_node_data_t* data);
int dncfg_node_is_close_curly_br_prev_lvl_dict(const dncfg_node_data_t* data);
int dncfg_node_is_close_curly_br_prev_lvl_list(const dncfg_node_data_t* data);
int dncfg_node_is_close_curly_br_lvl_0_dst_node(const dncfg_node_data_t* data);
int dncfg_node_is_close_curly_br_lvl_0_dst_prop(const dncfg_node_data_t* data);
int dncfg_node_is_comma(const dncfg_node_data_t* data);
int dncfg_node_is_colon(const dncfg_node_data_t* data);
int dncfg_node_is_close_square_br_prev_lvl_list(const dncfg_node_data_t* data);
int dncfg_node_is_close_square_br_prev_lvl_dict(const dncfg_node_data_t* data);
int dncfg_node_is_close_square_br_lvl_0_dst_node(const dncfg_node_data_t* data);
int dncfg_node_is_close_square_br_lvl_0_dst_prop(const dncfg_node_data_t* data);


void dncfg_node_step(dncfg_node_ctx_t* ctx);

#ifdef __cplusplus
}
#endif

#endif
